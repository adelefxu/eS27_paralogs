library(dplyr)
library(readxl)
library(tidyr)
library(ggpubr)
### DIRECTORIES
root_dir = "/Users/adelexu/Google Drive/PhD/S27L_manuscript/source_data/analysis_plotting_code"
project_dir = file.path(root_dir, "qpcr_p53_lactation_stages")
input_dir = file.path(project_dir, "data")
output_dir = file.path(project_dir, "results")
raw_data_file = file.path(input_dir, "Raw qPCR data RM.xlsx")
# read in input
raw_data = read_xlsx(path = raw_data_file, sheet = 1) # these are all already normalized -- eS27 and eS27L normalized to eS31, p53 to GAPDH
# plot
mammary_stage_colors = c("gray50", "#E69F00", "#E69F00", "#E69F00", "#E69F00", "#D55E00")
samples_to_plot = c("NP", "PD6", "PD10", "PD15", "PD15", "LD2")
genes_to_plot = c("eS27", "eS27L", "p53")
plot_format = stat_compare_means(ref.group = "NP",
label = "p.format",
method = "t.test",
size = 5)
for (goi in genes_to_plot) {
pdf(file = file.path(output_dir, paste0("qPCR_by_rut_", goi, ".pdf")), height=3, width=6)
p0 = ggbarplot(raw_data[raw_data$gene == goi,],
x = "stage", y = "log2_fold_change",
add = c("mean_se", "jitter"),
fill = "stage", palette = mammary_stage_colors)
plot(p0 + plot_format + theme(axis.text.x = element_text(angle = 45, hjust=1, vjust=1)))
dev.off()
}
rm(list = ls())
### PACKAGES
library(gplots)
library(ggplot2)
library(stats)
library(grDevices)
library(dplyr)
library(readxl)
library(tidyr)
library(ggpubr)
### DIRECTORIES
root_dir = "/Users/adelexu/Google Drive/PhD/S27L_manuscript/source_data/analysis_plotting_code"
project_dir = file.path(root_dir, "pup_weights")
input_dir = file.path(project_dir, "data")
output_dir = file.path(project_dir, "results")
raw_data_file = file.path(input_dir, "20210827_pup_weights_formatted.csv")
# read in input
raw_data = read.csv(raw_data_file)
lineages_ordered = c("S27>S27L", "S27L>S27")
zygs_ordered = c("WT", "het", "hom")
genotypes_ordered = c(
"S27>S27L_WT",
"S27>S27L_het",
"S27>S27L_hom",
"S27L>S27_WT",
"S27L>S27_het",
"S27L>S27_hom"
)
genotype_colors = c("gray50",
"#E69F00",
"#D55E00",
"gray50",
"#56B4E9",
"#4187AF")
raw_data$dam_genotype = paste(raw_data$dam_lineage, raw_data$dam_zyg, sep =
"_")
raw_data$pup_genotype = paste(raw_data$dam_lineage, raw_data$pup_zyg, sep =
"_")
raw_data$dam_lineage = factor(raw_data$dam_lineage, levels = lineages_ordered)
raw_data$dam_zyg = factor(raw_data$dam_zyg, levels = zygs_ordered)
raw_data$pup_zyg = factor(raw_data$pup_zyg, levels = zygs_ordered)
raw_data$dam_genotype = factor(raw_data$dam_genotype, levels = genotypes_ordered)
raw_data$pup_genotype = factor(raw_data$pup_genotype, levels = genotypes_ordered)
View(raw_data)
colnames(raw_data)
rm(list = ls())
### PACKAGES
library(gplots)
library(ggplot2)
library(stats)
library(grDevices)
library(dplyr)
library(readxl)
library(tidyr)
library(ggpubr)
### DIRECTORIES
root_dir = "/Users/adelexu/Google Drive/PhD/S27L_manuscript/source_data/analysis_plotting_code"
project_dir = file.path(root_dir, "pup_weights")
input_dir = file.path(project_dir, "data")
output_dir = file.path(project_dir, "results")
raw_data_file = file.path(input_dir, "20210827_pup_weights_formatted.csv")
# read in input
raw_data = read.csv(raw_data_file)
lineages_ordered = c("S27>S27L", "S27L>S27")
zygs_ordered = c("WT", "het", "hom")
genotypes_ordered = c(
"S27>S27L_WT",
"S27>S27L_het",
"S27>S27L_hom",
"S27L>S27_WT",
"S27L>S27_het",
"S27L>S27_hom"
)
genotype_colors = c("gray50",
"#E69F00",
"#D55E00",
"gray50",
"#56B4E9",
"#4187AF")
raw_data$dam_genotype = paste(raw_data$dam_lineage, raw_data$dam_zyg, sep =
"_")
raw_data$pup_genotype = paste(raw_data$dam_lineage, raw_data$pup_zyg, sep =
"_")
raw_data$dam_lineage = factor(raw_data$dam_lineage, levels = lineages_ordered)
raw_data$dam_zyg = factor(raw_data$dam_zyg, levels = zygs_ordered)
raw_data$pup_zyg = factor(raw_data$pup_zyg, levels = zygs_ordered)
raw_data$dam_genotype = factor(raw_data$dam_genotype, levels = genotypes_ordered)
raw_data$pup_genotype = factor(raw_data$pup_genotype, levels = genotypes_ordered)
# exclude all 2nd litters and only plot first - currently don't have enough data to show
raw_data = raw_data[raw_data$litter_number == 1,]
plot_by_pup_zyg = function(lineages_oi,
litters_oi,
dam_zygs_oi,
pup_zygs_oi,
timepoint_oi,
output_filename,
output_height,
output_width) {
filter = raw_data$dam_lineage %in% lineages_oi &
raw_data$litter_number %in% litters_oi &
raw_data$dam_zyg %in% dam_zygs_oi &
raw_data$pup_zyg %in% pup_zygs_oi & !is.na(raw_data[, timepoint_oi])
data_to_plot = raw_data[filter, ]
plot_format = stat_compare_means(ref.group = "WT",
method = "t.test",
label = "p.format")
pdf(
file = file.path(output_dir, output_filename),
height = output_height,
width = output_width
)
p0 = ggbarplot(
data_to_plot,
x = "pup_zyg",
y = timepoint_oi,
add = c("mean_se"),
fill = "pup_genotype",
palette = genotype_colors,
facet.by = "dam_lineage"
) + geom_jitter(aes_string(x = "pup_zyg", y = timepoint_oi, fill = "pup_genotype"),
position = position_jitterdodge())
plot(
p0 + plot_format + theme(axis.text.x = element_text(
angle = 45,
hjust = 1,
vjust = 1
)) + theme(legend.position = "none")
)
dev.off()
return(data_to_plot)
}
# plot weight of individual pups by pup genotype
timepoints = c("P4_weight_g", "P13_weight_g", "P21_weight_g")
# note that graphing by pup genotype at P4 is not valid since the pups aren't ID'ed yet, so the genotypes don't correspond to an individual yet
for (tp in timepoints) {
plot_by_pup_zyg(
lineages_oi = lineages_ordered,
litters_oi = 1,
dam_zygs_oi = zygs_ordered,
pup_zygs_oi = zygs_ordered,
timepoint_oi = tp,
output_filename = paste0(tp, "_by_pup_geno_all_dams.pdf"),
output_height = 3,
output_width = 6
)
}
plot_by_dam_zyg = function(lineages_oi,
litters_oi,
dam_zygs_oi,
pup_zygs_oi,
timepoint_oi,
output_filename,
output_height,
output_width) {
filter = raw_data$dam_lineage %in% lineages_oi &
raw_data$litter_number %in% litters_oi &
raw_data$dam_zyg %in% dam_zygs_oi &
raw_data$pup_zyg %in% pup_zygs_oi & !is.na(raw_data[, timepoint_oi])
data_to_plot = raw_data[filter, ]
plot_format = stat_compare_means(ref.group = "WT",
method = "t.test",
label = "p.format")
pdf(
file = file.path(output_dir, output_filename),
height = output_height,
width = output_width
)
p0 = ggbarplot(
data_to_plot,
x = "dam_zyg",
y = timepoint_oi,
add = c("mean_se"),
fill = "dam_genotype",
palette = genotype_colors,
facet.by = "dam_lineage"
) + geom_jitter(aes_string(x = "dam_zyg", y = timepoint_oi, fill = "dam_genotype"),
position = position_jitterdodge())
plot(
p0 + plot_format + theme(axis.text.x = element_text(
angle = 45,
hjust = 1,
vjust = 1
)) + theme(legend.position = "none")
)
dev.off()
return(data_to_plot)
}
# plot weight of individual pups by dam genotype
timepoints = c("P4_weight_g", "P13_weight_g", "P21_weight_g")
for (tp in timepoints) {
plot_by_dam_zyg(
lineages_oi = lineages_ordered,
litters_oi = 1,
dam_zygs_oi = zygs_ordered,
pup_zygs_oi = zygs_ordered,
timepoint_oi = tp,
output_filename = paste0(tp, "_by_dam_geno_all_dams.pdf"),
output_height = 3,
output_width = 6
)
}
# summarize metrics by litter
columns_for_litter_summary = c(
"dam_lineage",
"dam_zyg",
"dam_genotype",
"dam_ID",
"litter_number",
"mating_birth_date",
"mating_start_birth_interval_d",
"P4_weight_g",
"P13_weight_g",
"P21_weight_g"
)
data_by_litter = raw_data[, columns_for_litter_summary] %>% group_by(
dam_lineage,
dam_zyg,
dam_genotype,
dam_ID,
litter_number,
mating_birth_date,
mating_start_birth_interval_d
) %>% summarise(
P4_mean = mean(P4_weight_g),
P13_mean = mean(P13_weight_g),
P21_mean = mean(P21_weight_g),
litter_size = n()
)
plot_litter_avg_by_dam_zyg = function(lineages_oi,
litters_oi,
dam_zygs_oi,
metric_oi,
output_filename,
output_height,
output_width) {
filter = data_by_litter$dam_lineage %in% lineages_oi &
data_by_litter$litter_number %in% litters_oi &
data_by_litter$dam_zyg %in% dam_zygs_oi &
!is.na(data_by_litter[, metric_oi])
data_to_plot = data_by_litter[filter, ]
plot_format = stat_compare_means(ref.group = "WT",
method = "t.test",
label = "p.format")
pdf(
file = file.path(output_dir, output_filename),
height = output_height,
width = output_width
)
p0 = ggbarplot(
data_to_plot,
x = "dam_zyg",
y = metric_oi,
add = c("mean_se"),
fill = "dam_genotype",
palette = genotype_colors,
facet.by = "dam_lineage"
) + geom_jitter(aes_string(x = "dam_zyg", y = metric_oi, fill = "dam_genotype"),
position = position_jitterdodge())
plot(facet(
p0 + plot_format + theme(axis.text.x = element_text(
angle = 45,
hjust = 1,
vjust = 1
)) + theme(legend.position = "none"),
facet.by = "dam_lineage",
nrow = 2,
ncol = 1
))
dev.off()
return(data_to_plot)
}
# plot avg litter weight by dam genotype
metrics = c("P4_mean", "P13_mean", "P21_mean", "mating_start_birth_interval_d", "litter_size")
for (met in metrics) {
plot_litter_avg_by_dam_zyg(
lineages_oi = lineages_ordered,
litters_oi = 1,
dam_zygs_oi = zygs_ordered,
metric_oi = met,
output_filename = paste0(met, "_summarized_by_litter_plot_by_dam_geno_all_dams.pdf"),
output_height = 6,
output_width = 3
)
}
table(data_by_litter$dam_lineage, data_by_litter$dam_zyg, !is.na(data_by_litter$P4_mean))
table(data_by_litter$dam_lineage, data_by_litter$dam_zyg, !is.na(data_by_litter$P13_mean))
table(data_by_litter$dam_lineage, data_by_litter$dam_zyg, !is.na(data_by_litter$P21_mean))
plot_by_pup_zyg_and_litter = function(lineages_oi,
litters_oi,
dam_zygs_oi,
pup_zygs_oi,
timepoint_oi,
output_filename,
output_height,
output_width) {
filter = data_by_pup_zyg_and_litter$dam_lineage %in% lineages_oi &
data_by_pup_zyg_and_litter$litter_number %in% litters_oi &
data_by_pup_zyg_and_litter$dam_zyg %in% dam_zygs_oi &
data_by_pup_zyg_and_litter$pup_zyg %in% pup_zygs_oi &
!is.na(data_by_pup_zyg_and_litter[, timepoint_oi])
data_to_plot = data_by_pup_zyg_and_litter[filter,]
plot_format = stat_compare_means(ref.group = "WT",
method = "t.test",
label = "p.format")
pdf(
file = file.path(output_dir, output_filename),
height = output_height,
width = output_width
)
p0 = ggbarplot(
data_to_plot,
x = "pup_zyg",
y = timepoint_oi,
add = c("mean_se"),
fill = "pup_genotype",
palette = genotype_colors,
facet.by = "dam_lineage"
) + geom_jitter(aes_string(x = "pup_zyg", y = timepoint_oi, fill = "pup_genotype"),
position = position_jitterdodge())
plot(
p0 + plot_format + theme(axis.text.x = element_text(
angle = 45,
hjust = 1,
vjust = 1
)) + theme(legend.position = "none")
)
dev.off()
return(data_to_plot)
}
# summarize metrics by litter AND pup zygosity
columns_for_pup_zyg_and_litter_summary = c(
"dam_lineage",
"dam_zyg",
"dam_genotype",
"dam_ID",
"pup_zyg",
"pup_genotype",
"litter_number",
"mating_birth_date",
"mating_start_birth_interval_d",
"P4_weight_g",
"P13_weight_g",
"P21_weight_g"
)
data_by_pup_zyg_and_litter = raw_data[, columns_for_litter_summary] %>% group_by(
dam_lineage,
dam_zyg,
dam_genotype,
dam_ID,
pup_zyg,
pup_genotype,
litter_number,
mating_birth_date,
mating_start_birth_interval_d
) %>% summarise(
P4_mean = mean(P4_weight_g),
P13_mean = mean(P13_weight_g),
P21_mean = mean(P21_weight_g),
litter_size = n()
)
# summarize metrics by litter AND pup zygosity
columns_for_pup_zyg_and_litter_summary = c(
"dam_lineage",
"dam_zyg",
"dam_genotype",
"dam_ID",
"pup_zyg",
"pup_genotype",
"litter_number",
"mating_birth_date",
"mating_start_birth_interval_d",
"P4_weight_g",
"P13_weight_g",
"P21_weight_g"
)
data_by_pup_zyg_and_litter = raw_data[, columns_for_pup_zyg_and_litter_summary] %>% group_by(
dam_lineage,
dam_zyg,
dam_genotype,
dam_ID,
pup_zyg,
pup_genotype,
litter_number,
mating_birth_date,
mating_start_birth_interval_d
) %>% summarise(
P4_mean = mean(P4_weight_g),
P13_mean = mean(P13_weight_g),
P21_mean = mean(P21_weight_g),
litter_size = n()
)
table(data_by_pup_zyg_and_litter$dam_lineage, data_by_pup_zyg_and_litter$pup_zyg)
table(raw_data$dam_lineage, raw_data$pup_zyg)
table(data_by_pup_zyg_and_litter$dam_lineage, data_by_pup_zyg_and_litter$pup_zyg, !is.na(data_by_pup_zyg_and_litter$P4_mean))
table(data_by_pup_zyg_and_litter$dam_lineage, data_by_pup_zyg_and_litter$pup_zyg, !is.na(data_by_pup_zyg_and_litter$P4_mean))
table(data_by_pup_zyg_and_litter$dam_lineage, data_by_pup_zyg_and_litter$pup_zyg, !is.na(data_by_pup_zyg_and_litter$P13_mean))
table(data_by_pup_zyg_and_litter$dam_lineage, data_by_pup_zyg_and_litter$pup_zyg, !is.na(data_by_pup_zyg_and_litter$P21_mean))
# plot avg weight per genotype per litter
metrics = c("P4_mean", "P13_mean", "P21_mean")
for (met in metrics) {
plot_by_pup_zyg_and_litter(
lineages_oi = lineages_ordered,
litters_oi = 1,
dam_zygs_oi = zygs_ordered,
metric_oi = met,
output_filename = paste0(
met,
"_summarized_by_pup_zyg_and_litter_plot_by_pup_geno_all_dams.pdf"
),
output_height = 6,
output_width = 3
)
}
# plot avg weight per genotype per litter
timepoints = c("P4_mean", "P13_mean", "P21_mean")
for (tp in timepoints) {
plot_by_pup_zyg_and_litter(
lineages_oi = lineages_ordered,
litters_oi = 1,
dam_zygs_oi = zygs_ordered,
timepoint_oi = tp,
output_filename = paste0(
tp,
"_summarized_by_pup_zyg_and_litter_plot_by_pup_geno_all_dams.pdf"
),
output_height = 6,
output_width = 3
)
}
# plot avg weight per genotype per litter
timepoints = c("P4_mean", "P13_mean", "P21_mean")
for (tp in timepoints) {
plot_by_pup_zyg_and_litter(
lineages_oi = lineages_ordered,
litters_oi = 1,
dam_zygs_oi = zygs_ordered,
pup_zygs_oi = zygs_ordered,
timepoint_oi = tp,
output_filename = paste0(
tp,
"_summarized_by_pup_zyg_and_litter_plot_by_pup_geno_all_dams.pdf"
),
output_height = 6,
output_width = 3
)
}
# plot avg weight per genotype per litter
timepoints = c("P4_mean", "P13_mean", "P21_mean")
for (tp in timepoints) {
plot_by_pup_zyg_and_litter(
lineages_oi = lineages_ordered,
litters_oi = 1,
dam_zygs_oi = zygs_ordered,
pup_zygs_oi = zygs_ordered,
timepoint_oi = tp,
output_filename = paste0(
tp,
"_summarized_by_pup_zyg_and_litter_plot_by_pup_geno_all_dams.pdf"
),
output_height = 3,
output_width = 6
)
}
# plot avg weight per genotype per litter
timepoints = c("P13_mean", "P21_mean")
for (tp in timepoints) {
plot_by_pup_zyg_and_litter(
lineages_oi = lineages_ordered,
litters_oi = 1,
dam_zygs_oi = "het",
pup_zygs_oi = zygs_ordered,
timepoint_oi = tp,
output_filename = paste0(
tp,
"_summarized_by_pup_zyg_and_litter_plot_by_pup_geno_het_dams.pdf"
),
output_height = 3,
output_width = 6
)
}
het_dams_only = data_by_pup_zyg_and_litter[data_by_pup_zyg_and_litter$dam_zyg=="het",]
table(het_dams_only$dam_lineage, het_dams_only$pup_zyg, !is.na(het_dams_only$P13_mean))
table(het_dams_only$dam_lineage, het_dams_only$pup_zyg, !is.na(het_dams_only$P21_mean))
